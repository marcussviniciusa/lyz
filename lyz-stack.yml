version: '3.8'
services:
  lyz-backend:
    image: marcussviniciusa/lyz-backend:openai-key-fix
    pull_policy: always
    deploy:
      update_config:
        order: start-first
      restart_policy:
        condition: any
        delay: 5s
    container_name: lyz-backend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command: ["npx", "ts-node", "--transpile-only", "src/server.ts"]
    environment:
      - TZ=America/Sao_Paulo
      - NODE_ENV=production
      - PORT=3001
      # Database - usando os dados fornecidos anteriormente
      - DB_HOST=206.183.131.10
      - DB_PORT=5432
      - DB_NAME=dev_lyz
      - DB_USER=postgres
      - DB_PASSWORD=Marcus1911Marcus
      # JWT
      - JWT_SECRET=dqEPSjlVO3jNhRWM8hmiixS6dPHI1vj1Vr2FkBEX4-ICXQt_61zidHbEAVb6yzWNBgc0SDr6T3BlbkFJ_oYdWd6VDpE8QL2d8wt6GI38YAQHI4KBf4SCaIUbDKn3Tdej6tbjBvvVaozOIrfE7zSK
      - JWT_EXPIRATION=1h
      - JWT_REFRESH_EXPIRATION=7d
      # OpenAI (apenas para geração do plano, não para transcrição)
      - OPENAI_API_KEY=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
      # Google Speech API é usado para transcrição (a variável GOOGLE_APPLICATION_CREDENTIALS deve estar configurada)
      # Minio
      - MINIO_ENDPOINT=s3.marcussviniciusa.cloud
      - MINIO_PORT=443
      - MINIO_ACCESS_KEY=7ymu5rlq1EsdYvCAmcFt
      - MINIO_SECRET_KEY=hQbQ0SPBRyoHgi1qg45DYRKgbOPObLcNxmhTGw8B
      - MINIO_BUCKET=lyz-files
      - MINIO_USE_SSL=true
      # Curseduca API
      - CURSEDUCA_API_KEY=11803f0a8de22323b86b1edadc7afcd204150919
      - CURSEDUCA_API_URL=https://prof.curseduca.pro
      # Configurações de Admin
      - SUPERADMIN_EMAIL=admin@lyz.healthcare
      - SUPERADMIN_PASSWORD=Admin@123
      - SUPERADMIN_NAME=Lyz Admin
      # Configurações de CORS
      - CORS_ORIGIN=https://lyz.marcussviniciusa.cloud
      - CORS_ALLOWED_ORIGINS=https://lyz.marcussviniciusa.cloud
      - API_BASE_URL=https://apilyz.marcussviniciusa.cloud
      - FRONTEND_URL=https://lyz.marcussviniciusa.cloud
      # Google Speech
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google_app_cred.json
    volumes:
      - lyz_backend_data:/app/data
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lyz-api.entrypoints=websecure"
      - "traefik.http.routers.lyz-api.rule=Host(`apilyz.marcussviniciusa.cloud`)"
      - "traefik.http.services.lyz-api.loadbalancer.server.port=3001"
      - "traefik.http.routers.lyz-api.middlewares=cors-lyz,lyz-upload,secureHeaders@file"
      - "traefik.http.middlewares.cors-lyz.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.cors-lyz.headers.accesscontrolalloworiginlist=https://lyz.marcussviniciusa.cloud"
      - "traefik.http.middlewares.cors-lyz.headers.accesscontrolallowheaders=Origin,X-Requested-With,Content-Type,Accept,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Cache-Control,Pragma,Expires,X-Real-IP,X-Forwarded-For,X-Forwarded-Proto"
      - "traefik.http.middlewares.cors-lyz.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors-lyz.headers.accesscontrolmaxage=3600"
      - "traefik.http.middlewares.cors-lyz.headers.addvaryheader=true"
      # Configuração para uploads grandes
      - "traefik.http.middlewares.lyz-upload.buffering.maxRequestBodyBytes=31457280"

  lyz-frontend:
    image: marcussviniciusa/lyz-frontend:openai-config
    container_name: lyz-frontend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    depends_on:
      - lyz-backend
    # A nova imagem usa Nginx para servir os arquivos estáticos do Next.js
    # Não precisamos de variáveis de ambiente, pois toda a configuração
    # já está embutida nos arquivos estáticos durante o processo de build
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      # Router principal para o frontend
      - "traefik.http.routers.lyz-web.entrypoints=websecure"
      - "traefik.http.routers.lyz-web.rule=Host(`lyz.marcussviniciusa.cloud`) && !PathPrefix(`/api/transcribe`)"
      - "traefik.http.services.lyz-web.loadbalancer.server.port=3000"
      - "traefik.http.routers.lyz-web.middlewares=secureHeaders@file"
      
      # Redirecionamento para corrigir as URLs que incluem a porta 3000
      - "traefik.http.routers.lyz-port-redirect.entrypoints=websecure"
      - "traefik.http.routers.lyz-port-redirect.rule=Host(`lyz.marcussviniciusa.cloud:3000`)"
      - "traefik.http.routers.lyz-port-redirect.middlewares=lyz-port-redirect-middleware"
      - "traefik.http.middlewares.lyz-port-redirect-middleware.redirectregex.regex=^https://lyz.marcussviniciusa.cloud:3000/(.*)"
      - "traefik.http.middlewares.lyz-port-redirect-middleware.redirectregex.replacement=https://lyz.marcussviniciusa.cloud/$${1}"
      - "traefik.http.middlewares.lyz-port-redirect-middleware.redirectregex.permanent=true"
      
      # Router especial para encaminhar /api/transcribe diretamente para o backend
      - "traefik.http.routers.lyz-transcribe.entrypoints=websecure"
      - "traefik.http.routers.lyz-transcribe.rule=Host(`lyz.marcussviniciusa.cloud`) && PathPrefix(`/api/transcribe`)"
      - "traefik.http.routers.lyz-transcribe.middlewares=lyz-transcribe-strip,cors-lyz,lyz-upload,secureHeaders@file"
      - "traefik.http.middlewares.lyz-transcribe-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.lyz-transcribe.service=lyz-api@docker"

networks:
  proxy:
    external: true

volumes:
  lyz_backend_data:
    name: lyz_backend_data